grid = document.body.children[0].innerText
         .split('\n')
         .map(line => line.split(/\s+/))
         .slice(0, -1)
         .map(row => row.map(n => parseInt(n, 10)))
         .map(row => row.sort((l, r) => r - l))
//> (16) [Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16), Array(16)]
//>   0: (16) [2171, 2015, 1984, 1809, 1731, 1715, 1649, 1295, 981, 719, 349, 181, 76, 62, 52, 51]
//>   1: (16) [1685, 1658, 1641, 1548, 1506, 960, 670, 610, 533, 242, 161, 107, 99, 86, 84, 78]
//>   2: (16) [2759, 2420, 2404, 2293, 2198, 2107, 1837, 1446, 1373, 905, 542, 209, 121, 111, 109, 95]
//>   3: (16) [751, 696, 558, 552, 530, 527, 481, 479, 307, 252, 205, 200, 186, 164, 142, 114]
//>   4: (16) [1413, 1411, 1344, 1315, 1280, 1249, 1007, 994, 656, 581, 193, 120, 112, 110, 103, 74]
//>   5: (16) [5252, 4701, 4669, 4336, 4237, 3987, 2536, 2313, 2268, 1400, 1264, 1061, 179, 161, 159, 142]
//>   6: (16) [3520, 3420, 3302, 3270, 3172, 1705, 1610, 1026, 628, 524, 381, 295, 293, 244, 185, 39]
//>   7: (16) [4410, 4271, 4142, 4137, 3982, 3821, 3730, 2094, 2039, 1835, 1741, 468, 179, 150, 147, 141]
//>   8: (16) [2445, 2268, 2165, 2039, 1977, 1936, 1807, 1796, 1641, 1252, 1218, 335, 102, 84, 83, 66]
//>   9: (16) [282, 275, 257, 233, 216, 212, 201, 200, 134, 105, 96, 81, 72, 65, 60, 57]
//>   10: (16) [6147, 5973, 5616, 5576, 5372, 5253, 4878, 4781, 3317, 3218, 2424, 276, 274, 234, 200, 178]
//>   11: (16) [4517, 4171, 3952, 3831, 3705, 2603, 2436, 1554, 660, 619, 610, 587, 152, 134, 125, 115]
//>   12: (16) [2970, 2918, 2877, 2672, 2086, 1663, 1565, 1305, 1001, 473, 254, 181, 167, 162, 128, 59]
//>   13: (16) [2521, 2291, 2290, 2037, 1785, 1494, 1121, 981, 737, 516, 473, 348, 278, 271, 244, 229]
//>   14: (16) [2236, 2208, 1952, 1937, 1934, 1767, 1510, 1451, 1344, 865, 621, 194, 61, 59, 50, 49]
//>   15: (16) [2713, 2663, 2650, 2397, 2351, 2312, 1824, 1192, 703, 510, 333, 157, 125, 106, 94, 89]
grid.reduce((total, row) => {
  let result = 0;
  for (let outer = 0; outer <= row.length - 2; outer++) {
    for (let inner = outer + 1; inner <= row.length - 1; inner++) {
      if (row[outer] % row[inner] === 0) {
        result += row[outer] / row[inner];
      }
    }
  }

  return total + result;
}, 0)
//> 320